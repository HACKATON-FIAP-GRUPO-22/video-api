apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-api
spec:
  replicas: 2  # Quantidade de réplicas da aplicação
  selector:
    matchLabels:
      app: video-api  # Seleciona pods com essa label
  template:
    metadata:
      labels:
        app: video-api  # Associa esse label ao pod criado
    spec:
      containers:
      - name: video-api
        image: edsontecno/video-api:latest  # Imagem do Node.js 
        ports:
        - containerPort: 3000  # Porta exposta pela aplicação
        resources:
          requests:   # Recursos mínimos para cada pod
            memory: "512Mi"
            cpu: "100m"
          limits:     # Limites máximos para cada pod
            memory: "1024Mi"
            cpu: "1"        
        env:
        - name: SERVER_PORT
          value: "3000"  # Porta do servidor
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host  
        - name: DB_PORT
          value: "5432"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username  
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: DB_NAME
          value: postgres
        - name: DB_ADMIN_EMAIL
          value: admin@root.com
        - name: NODE_ENV
          value: production
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: AWS_REGION

        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: AWS_ACCESS_KEY_ID
        - name: AWS_PESSOAL_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: AWS_PESSOAL_ACCESS_KEY_ID     
        - name: AWS_PESSOAL_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: AWS_PESSOAL_SECRET_ACCESS_KEY          
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_SESSION_TOKEN
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: AWS_SESSION_TOKEN          
        - name: AWS_S3_BUCKET_NAME
          value: repo-videos-fiap
        - name: QUEUE_PROCESSAR
          value: processar
        - name: QUEUE_PROCESSADOS
          value: processados 
        - name: AWS_SQS_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: AWS_SQS_ENDPOINT
        - name: AWS_SES_FROM_EMAIL
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: AWS_SES_FROM_EMAIL

